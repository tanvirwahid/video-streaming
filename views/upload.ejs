<!DOCTYPE html>
<html>
  <head>
    <title>DASH Video Player</title>
    <script src="https://cdn.dashjs.org/latest/dash.all.min.js"></script>
    <!-- Nunito Sans Font -->
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />
    <!-- Font Awesome for Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <style>
      body {
        font-family: "Nunito Sans", sans-serif;
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .header {
        width: 100%;
        background-color: #cc0000;
        color: white;
        padding: 10px 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .header .logo {
        font-size: 24px;
        font-weight: bold;
      }
      .header .menu {
        display: flex;
        gap: 15px;
      }
      .header .menu a {
        color: white;
        text-decoration: none;
        font-size: 18px;
      }
      .header .menu a:hover {
        text-decoration: underline;
      }
      .container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        box-sizing: border-box;
      }
      .video-container {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        height: 0;
        overflow: hidden;
      }
      .video-container video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
      .title {
        font-size: 24px;
        font-weight: bold;
        margin: 10px 0;
      }
      .description {
        font-size: 14px;
        color: #606060;
      }
      .comments-section {
        margin-top: 30px;
      }
      .comment {
        margin-bottom: 20px;
      }
      .comment-author {
        font-weight: bold;
        margin-right: 5px;
      }
      .comment-text {
        color: #333;
      }
      .add-comment {
        margin-top: 20px;
      }
      .add-comment textarea {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
      }
      .add-comment button {
        background-color: #cc0000;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      @media (max-width: 768px) {
        .header .logo {
          font-size: 20px;
        }
        .header .menu a {
          font-size: 16px;
        }
        .title {
          font-size: 20px;
        }
        .description {
          font-size: 12px;
        }
      }
      @media (max-width: 480px) {
        .header {
          flex-direction: column;
          align-items: flex-start;
        }
        .header .menu {
          flex-direction: column;
          gap: 10px;
          align-items: flex-start;
        }
      }
    </style>
  </head>
  <body id="container">
    <div class="header">
      <div class="logo"><i class="fas fa-play-circle"></i> MyVideoSite</div>
      <div class="menu">
        <a href="#"><i class="fas fa-home"></i> Home</a>
        <a href="#"><i class="fas fa-video"></i> Videos</a>
        <a href="#"><i class="fas fa-user"></i> Profile</a>
      </div>
    </div>
    <div class="container">
      <% if (typeof message !== 'undefined') { %>
      <h1><%= message %></h1>
      <% } %>
      <form
        action="#"
        id="upload-form"
        method="POST"
        enctype="multipart/form-data"
      >
        <label for="videoFile">Select a video file:</label><br />
        <input
          type="file"
          id="videoFile"
          name="video"
          accept="video/*"
          required
        /><br />
        <button type="button" id="submit-btn">Upload</button>
      </form>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const inputElement = document.getElementById("videoFile");

        inputElement.addEventListener("change", function () {
          // This function will be called when the user selects a file
          const selectedFile = inputElement.files[0];

          // You can now use selectedFile for further processing
          console.log("Selected file:", selectedFile);
        });

        const token = localStorage.getItem("jwtToken");
        const apiKey = "<%= apiKey %>";

        fetch(`${apiKey}/api/user`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            Authorization: `${token}`,
          },
        })
          .then((response) => {
            return response.json();
          })
          .then((data) => {
            if (data.status && data.status === 401) {
              window.location.href = `${apiKey}/login`;
            }
          })
          .catch((error) => {
            console.error("Error fetching user data:", error);
          });

        document
          .getElementById("submit-btn")
          .addEventListener("click", function () {
            const form = document.getElementById("upload-form");
            const formData = new FormData(form);

            const data = {
              videoFile: formData.get("videoFile"),
            };

            if (!data.videoFile) {
              alert("Please upload a video.");
              return;
            }

            fetch(`${apiKey}/api/video/upload`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Authorization: token,
              },
              body: JSON.stringify(data),
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
              })
              .then((data) => {
                console.log("Login successful:", data);
                localStorage.setItem("jwtToken", data.token);
                window.location.href = `${apiKey}/`;
              })
              .catch((error) => {
                console.error("Error:", error.message);

                if (error.message.includes("status:")) {
                  const statusCode = error.message.split("status: ")[1];
                  alert(`Error: Failed to log in. Status code: ${statusCode}`);
                } else {
                  alert(
                    "Error: Failed to log in. Network error or server is down."
                  );
                }
              });
          });
      });
    </script>
  </body>
</html>
